(function() {
    const rxjs = require('rxjs');
    const _ = require('lodash');

    class BoardsService {

        constructor() {
            this.serialService = require("./serial.js");            
            this.boardManager = require("./board.js");
            this.boards={};
        }

        init() {
            console.log('BoardsManager: Initialising manager');            
        }

        connectBoard(port) {
            const board = new this.boardManager(port);
            this.boards[port] = board;
            this.boardsSubject.next(this.boards);
            this.boardSubject.next(board);

            board.update.subscribe(() => {
                this.updateSubject.next();
            })
    
            board.state.subscribe((state) => {
                if (state==='disconnected') {
                    this.boards[port]=null;
                    this.boardsSubject.next(this.boards);
                    this.updateSubject.next();
                    console.log(this.boards);
                }
            });
        };

        storeBoard(board) {
            const port = board.portName;
            this.boards[port] = board;            
        }

        getBoardNames() {
            return _.keys(this.boards);
        }

        getBoard(boardId) {
            return this.boards[boardId];
        }
    };

    module.exports = new BoardsService();
}());